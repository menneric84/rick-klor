#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
	behaviors {
		hm_rick: hmrick {
			compatible = "zmk,behavior-hold-tap";
			label = "HMRICK";
			bindings = <&kp>, <&kp>;
			
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <175>;// triggers the hold behavior when the tapping-term-ms has expired
			quick-tap-ms = <150>;// If you press a tapped hold-tap again within quick-tap-ms milliseconds of the first press, it will always trigger the tap behavior.
			require-prior-idle-ms = <185>;// like quick-tap-ms however it will apply for any non-modifier key pressed before it
		};
		
		as: auto_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "AUTO_SHIFT";
			#binding-cells = <2>;
			tapping_term_ms = <350>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};
	
	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			// -----------------------------------------------------------------------------------------
			// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
			// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
			// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
			//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
			
			bindings = <
			&as ESC Q  &kp W  &kp E       &kp R                    &kp T            
			&hm_rick RIGHT_SHIFT A  &hm_rick RIGHT_ALT S  &kp D       &hm_rick LEFT_CONTROL F  &kp G          
			&as RIGHT_GUI Z  &kp X  &kp C       &kp V                    &kp B
			&lt 1 SPACE              &kp BACKSPACE    &sk RIGHT_SHIFT  &lt 2 ENTER 
			>;
		};

		raise_layer {			
			bindings = <
			&trans               &trans               &trans         &trans   &trans
			&as LS(N1) NUMBER_1  &as LS(N2) NUMBER_2  &as LS(N3) N3  &as LS(N4) N4      &as LS(N5) N5   
			&trans               &trans               &trans         &as LBKT LS(LBKT)  &trans          
			&bootloader            &trans           &trans                  &trans 
			>;
		};
		
		layer_3 {
			bindings = <
			&kp TAB       &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     
			&kp ESC   &kp RA(RC(G))  &kp RA(RC(R))  &kp RA(RC(F))    &studio_unlock
			&kp RIGHT_GUI              &trans         &trans         &trans 
			 &trans         &kp BACKSPACE           &kp TAB    &trans 
			 >;
		};
		

	};
};